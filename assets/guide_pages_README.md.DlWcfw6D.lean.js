import{_ as e,c as t,aP as r,o as s}from"./chunks/framework.CykvSdhI.js";const p=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"guide/pages/README.md","filePath":"guide/pages/README.md"}'),o={name:"guide/pages/README.md"};function i(h,a,l,c,n,d){return s(),t("div",null,a[0]||(a[0]=[r('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><h3 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h3><p>随着大前端的发展，前端开发也需要像后端一样，制定相应的规范和约束。目的是更好的提升团队的协作，编写符合规范的业务代码，使得团队之间合作效率提升！！文档参考：阿里、京东、腾讯等大厂技术文档，结合项目中可能出现的问题，进行统一规范和约束。</p><h3 id="html-规范" tabindex="-1">HTML 规范 <a class="header-anchor" href="#html-规范" aria-label="Permalink to &quot;HTML 规范&quot;">​</a></h3><p>HTML 作为前端的入门型技能，基于 W3C、苹果开发者、MDN 等官方文档，结合日常业务场景和需求以及开发中的总结来拟定统一规范。</p><h3 id="css-规范" tabindex="-1">CSS 规范 <a class="header-anchor" href="#css-规范" aria-label="Permalink to &quot;CSS 规范&quot;">​</a></h3><p>通常，在项目中有纯 css 原生语法和基于 css 预编译的语法，从业务层面出发指定统一的公共 css 规范，减少开发中的重复编码。</p><h3 id="js-规范" tabindex="-1">JS 规范 <a class="header-anchor" href="#js-规范" aria-label="Permalink to &quot;JS 规范&quot;">​</a></h3><p>Javascript 是一门弱语言，在日常开发过程中，制定统一规范，可以减少程序出错的概率，在基于 ts 的类型约束之后，使得 js 程序更加健壮。</p><h3 id="vue-项目规范" tabindex="-1">Vue 项目规范 <a class="header-anchor" href="#vue-项目规范" aria-label="Permalink to &quot;Vue 项目规范&quot;">​</a></h3><p>Vue 项目中，理应遵顼 Vue 官方规范中的 A 规范，结合业务统一规范（如组件规范、命名规范等）</p><h3 id="react-项目规范" tabindex="-1">React 项目规范 <a class="header-anchor" href="#react-项目规范" aria-label="Permalink to &quot;React 项目规范&quot;">​</a></h3><p>React 作为一个库，官方没有规定项目的整体结构，因此，在不同团队中，每个人的侧重点技术关注点不同，如果随着项目体积增大的时候，会造成编码风格迥异，难以维护。制定 React 项目规范，为项目开发起到锦上添花的效果。</p><h3 id="小程序" tabindex="-1">小程序 <a class="header-anchor" href="#小程序" aria-label="Permalink to &quot;小程序&quot;">​</a></h3><p>小编努力编写中...</p>',15)]))}const m=e(o,[["render",i]]);export{p as __pageData,m as default};
