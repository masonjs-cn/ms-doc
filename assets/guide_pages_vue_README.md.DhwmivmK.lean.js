import{_ as i,c as a,aP as e,o as t}from"./chunks/framework.CykvSdhI.js";const E=JSON.parse('{"title":"基础规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/pages/vue/README.md","filePath":"guide/pages/vue/README.md"}'),n={name:"guide/pages/vue/README.md"};function p(l,s,h,k,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="基础规范" tabindex="-1">基础规范 <a class="header-anchor" href="#基础规范" aria-label="Permalink to &quot;基础规范&quot;">​</a></h1><p>vue 项目规范以 Vue <a href="https://v3.cn.vuejs.org/" target="_blank" rel="noreferrer">官方规范</a> 中的 A 规范为基础，在项目开发中，所有代码均遵循改规范。</p><h3 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h3><p>项目技术栈选型：<code>Vue3.0 + typescript</code> 搭建与配置。</p><h3 id="项目命名" tabindex="-1">项目命名 <a class="header-anchor" href="#项目命名" aria-label="Permalink to &quot;项目命名&quot;">​</a></h3><p>统一约定字母小写命名法，以中划线分割</p><p>推荐：<code>ms-web-login</code></p><h5 id="目录命名" tabindex="-1">目录命名 <a class="header-anchor" href="#目录命名" aria-label="Permalink to &quot;目录命名&quot;">​</a></h5><p>统一约定字母小写命名法，复数结构采用复数命名</p><p>推荐：<code>scipts</code>、<code>styles</code> 、<code>images</code>等等</p><p><code>Vue</code> 项目中 components 组件命名，目录统一约定小写方式，多个单词使用中划线分割；组件实现方式：.vue 组件或者 tsx 组件方式</p><p>组件目录推荐： <code>ms-search</code>、<code>ms-icons</code> 组件文件推荐: <code>MsSearch.vue</code>、<code>MsIcon.tsx</code></p><p><strong>注意：</strong> 项目开发中，禁止使用拼音英文混合方式、纯拼音命名方式。</p><h4 id="ts、css、scss、html、png-文件命名" tabindex="-1">TS、CSS、SCSS、HTML、PNG 文件命名 <a class="header-anchor" href="#ts、css、scss、html、png-文件命名" aria-label="Permalink to &quot;TS、CSS、SCSS、HTML、PNG 文件命名&quot;">​</a></h4><p>全部使用小写方式、以中划线分割</p><p>推荐：<code>index.html</code>、<code>base.scss</code>、<code>auth.ts</code>、<code>icon-search.png</code></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>代码中命名严谨使用拼音与英文混合的方式，或纯拼音命名方式。规范的命名可以方便阅读。</p></div><h3 id="编码规范" tabindex="-1">编码规范 <a class="header-anchor" href="#编码规范" aria-label="Permalink to &quot;编码规范&quot;">​</a></h3><h4 id="组件规范" tabindex="-1">组件规范 <a class="header-anchor" href="#组件规范" aria-label="Permalink to &quot;组件规范&quot;">​</a></h4><p><strong>组件名统一约定多个单词组成(&gt;=2)，且命名采用大驼峰格式。这样做可以避免与现有 HTML 元素相互冲突</strong></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">impot { defineComponent } from </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MsButton&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>单文件组件标签顺序固定</strong></p><p>推荐：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">impot { defineComponent } from </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h4><p><strong>使用 v-for 设置键值 key</strong></p><p><strong>v-show 与 v-if 选择：</strong> 如果运行时，非常频繁地切换，使用 v-show；如果在运行时，条件很少改变，使用 v-if。</p>`,27)]))}const c=i(n,[["render",p]]);export{E as __pageData,c as default};
